.page-header {
	position: relative;
	min-height: 50vh;
}

.page-banner {
	overflow-y: hidden;
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	top: calc(var(--contact-strip-ht) + var(--navbar-ht));
	height: var(--page-banner-ht);

	background: url(../assets/images/sky.jpg) center no-repeat var(--sec);
}

.page-banner::before {
	position: absolute;
	display: block;
	content: "";
	background-color: var(--quad);
	background-color: #333;
	bottom: 0;
	left: 0;
	width: 100%;
	height: calc(100% - 15vh);
	height: 100%;
	opacity: 0.6;
}

.banner-head {
	margin-left: 10vw;
	margin-right: auto;
	color: var(--prim);
	z-index: 1;
}

.main {
	padding: var(--r1);
}

.expanded-services {
  padding: 0 var(--r7);
}

.service-container {
  /*   overflow: hidden; */
  /*   overflow-x: visible; */
    display: flex;
    flex-direction: column;
    position: relative;
    margin: var(--r5) 0;
    margin-bottom: 3rem;
    width: 100%;
  }
  
  .service-article {
    position: relative;
    padding: 0;
    
    color: var(--prim);
    background-color: var(--quat);
    
    transition: all 300ms ease;
  }
  
  .service-container > .service-article:first-child {
    box-shadow: 0px 4px 6px -3px var(--detail);
    z-index: 1;
  }
  
  .service-article h2 {
    display: inline-block;
    margin: 0;
    padding: var(--r2) var(--r4);
    background-color: var(--tert);
    color: var(--prim);
  }
  
  .service-article p {
    padding: var(--r6);
  }
  
  .service-expand {
    overflow: hidden;
    position: absolute;
    
    right: 0;
    bottom: 0;
    transform: translate(50%, 50%);
    width: 5rem;
    height: 5rem;
    
    background-color: var(--tert);
    border: var(--r2) solid var(--prim);
    border-radius: 50%;
    
    transform-origin: center center;
    cursor: pointer;
    z-index: 1;
  }
  
  .service-expand::before {
    content: "";
    position: absolute;
    
    bottom: 30%;
    left: 25%;
    width: 50%;
    height: 50%;
    
    transform: rotate(45deg);
    
  /*   background-color: var(--detail); */
    border-right: 1rem solid var(--detail);
    border-bottom: 1rem solid var(--detail);
  /*   outline: .5rem solid var(--sec) .5rem solid var(--sec) .5rem solid var(--sec) .5rem solid var(--sec); */
  }
  
  .service-expand::after {
    display: none;
    content: "";
    position: absolute;
    
    bottom: 55%;
    left: 25%;
    width: 50%;
    height: 50%;
    
    transform: rotate(45deg);
    background-color: var(--tert);
    background-color: var(--quat);
  }
  
  .service-expand.pull-open {
    transform: translate(50%, 50%) rotate(180deg);
    transform-origin: center center;
  }
  
  .service-expand,
  .service-expand::before,
  .service-expand::after {
    transition: all 200ms ease;
  }
  
  .service-expand:hover,
  .service-expand:hover::after,
  .service-expand:focus,
  .service-expand:focus::after{
    background-color: var(--sec);
    outline: 0;
  }
  
  .service-expand:hover::before,
  .service-expand:focus::before{
    transform: scale(1.1) rotate(45deg);
  }
  
  .pulldown {
    overflow: hidden;
    position: relative;
    width: calc(100% - .2rem);
    margin-left: auto;
    /* height: 0; */
    /*   transform: translateY(-100%); */
    max-height: 0;
    transition: all 150ms ease;
  }
  
  .pulldown.pull-open {
  /*  Not going to worry about the max-height for now, as this will be a static site, I can probably get away with explicitly coding it and move on to the next piece. Since I can't animate max-height with very implicit units *SIGH* */
    max-height: 100vh;
  }
  
  /* .pulldown *, */
  .pulldown .p,
  .pulldown .ul {
  /*   position: absolute; */
    transform: translateY(-300%);
    transition: all 150ms ease;
  }
  
  /* .pulldown *.pull-open, */
  .pulldown .p.pull-open,
  .pulldown .ul.pull-open {
  /*   position: relative; */
    transform: translateY(0%);
    
  }
  
  .pulldown ul {
    padding-bottom: var(--r6);
    padding-left: 3.5rem;
    padding-right: var(--r6);
    list-style-type: circle;
  }
  
  .pulldown li {
    padding-bottom: var(--r3);
  }
  
  .pulldown li::marker {
    color: var(--detail);
  }

  @media screen and (min-width: 48rem) {

    .main {
      padding-left: var(--r4);
      padding-right: var(--r4);
    }
  
    .section-heading + p {
      text-align: justify;
    }
  
  }